SET(LIB_NAME libtest)
SET(PAL_USER_DEFINED_DYNAMIC_OR_STATIC STATIC)		# "SHARED" is for lib+DLL

SET(HEADERS_TEST_LIB
	test_lib.h
)
SET(SOURCE_TEST_LIB
	test_lib.cpp
)
SOURCE_GROUP("test_lib" FILES ${HEADERS_TEST_LIB})
SOURCE_GROUP("test_lib" FILES ${SOURCE_TEST_LIB})
#INCLUDE_DIRECTORIES(${HEADERS_TEST_LIB_PATH})


SET(HEADERS_EXAMPLE
	${HEADERS_EXAMPLE_PATH}/graphics.h
)
SET(SOURCE_EXAMPLE
	${SOURCE_EXAMPLE_PATH}/graphics.cpp
)
SOURCE_GROUP("example" FILES ${HEADERS_EXAMPLE})
SOURCE_GROUP("example" FILES ${SOURCE_EXAMPLE})
INCLUDE_DIRECTORIES(${HEADERS_EXAMPLE_PATH})


SET(HEADERS_SDLGL
	${HEADERS_SDLGL_PATH}/sdlgl.h
)
SET(SOURCE_SDLGL
	${SOURCE_SDLGL_PATH}/sdlgl.cpp
)
SOURCE_GROUP("sdlgl" FILES ${HEADERS_SDLGL})
SOURCE_GROUP("sdlgl" FILES ${SOURCE_SDLGL})
INCLUDE_DIRECTORIES(${HEADERS_SDLGL_PATH})


SET(HEADERS_FRAMEWORK
)
SET(SOURCE_FRAMEWORK
)
SOURCE_GROUP("framework" FILES ${HEADERS_FRAMEWORK})
SOURCE_GROUP("framework" FILES ${SOURCE_FRAMEWORK})
INCLUDE_DIRECTORIES(${HEADERS_FRAMEWORK_PATH})


SET(HEADERS_BASE
)
SET(SOURCE_BASE
)
SOURCE_GROUP("pal" FILES ${HEADERS_BASE})
SOURCE_GROUP("pal" FILES ${SOURCE_BASE})
#INCLUDE_DIRECTORIES(${HEADERS_BASE_PATH})

SET(HEADERS_IMPL
)
SET(SOURCE_IMPL
)
SOURCE_GROUP("pal_i" FILES ${HEADERS_IMPL})
SOURCE_GROUP("pal_i" FILES ${SOURCE_IMPL})
INCLUDE_DIRECTORIES(${HEADERS_IMPL_PATH})


ADD_LIBRARY(
	${LIB_NAME}
	${PAL_USER_DEFINED_DYNAMIC_OR_STATIC}
	${HEADERS_TEST_LIB}
	${SOURCE_TEST_LIB}
	${HEADERS_EXAMPLE}
	${SOURCE_EXAMPLE}
	${HEADERS_SDLGL}
	${SOURCE_SDLGL}
	${HEADERS_FRAMEWORK}
	${SOURCE_FRAMEWORK}
	${HEADERS_BASE}
	${SOURCE_BASE}
	${HEADERS_IMPL}
	${SOURCE_IMPL}
)

#ADD_DEPENDENCY_ALL_ENGINES(${LIB_NAME})

ADD_DEPENDENCIES( ${LIB_NAME} libpal )
INCLUDE_WITH_VARIABLES( ${LIB_NAME} SDL )
#TARGET_LINK_LIBRARIES( ${LIB_NAME} ${MATH_LIBRARY} ${DL_LIBRARY} )
ADD_INTERNAL_DEBUG_DEFINITIONS(${LIB_NAME})

IF(MSVC)
	IF(NOT BUILD_OUTPUT_DIR_RELEASE_DEBUG)
		# Ugly workaround to remove the "/debug" or "/release" in each output
		SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PREFIX "../")
		SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES IMPORT_PREFIX "../")
	ENDIF()
ENDIF()

SET(LIB_PUBLIC_HEADERS ${HEADERS_TEST_LIB} ${HEADERS_EXAMPLE} ${HEADERS_SDLGL} ${HEADERS_FRAMEWORK} ${HEADERS_BASE} ${HEADERS_IMPL})
INCLUDE(ModuleInstall OPTIONAL)
